@Grab('org.hsqldb:hsqldb:2.3.4')
@GrabConfig(systemClassLoader=true)

import groovy.sql.Sql

class dbAdder {
    def url = "jdbc:hsqldb:../db/company"
    def user = 'sa'
    def password = ''
    def driver = "org.hsqldb.jdbcDriver"

    void addXml(String filePath) {
        def sql = Sql.newInstance(url, user, password, driver)

        sql.execute """
                CREATE TABLE IF NOT EXISTS EMPLOYEES (
                employeeId INTEGER GENERATED BY DEFAULT AS IDENTITY,
                remoteId INTEGER,
                FirstName VARCHAR(64),
                LastName VARCHAR(64),
                ContactNo VARCHAR(15),
                Email VARCHAR(255),
                City VARCHAR(64),
                State VARCHAR(64),
                Zip VARCHAR(10),
                UNIQUE(employeeId)                                  
                );
                """
        sql.execute """
                        CREATE INDEX IF NOT EXISTS name
                        ON EMPLOYEES (FirstName, LastName);
                        """
        //parse the file
        def parser = new companyXmlParser()

        parser.processCompany(filePath) {
            List avail_data = sql.rows("SELECT * FROM EMPLOYEES WHERE FIRSTNAME = ${it.FirstName} AND LASTNAME = ${it.LastName};")
            if (avail_data.size() == 0) {
                sql.execute """ INSERT INTO EMPLOYEES (FirstName, LastName, ContactNo, Email, City, State, Zip)
                                    VALUES (${it.FirstName}, ${it.LastName}, ${it.ContactNo}, ${it.Email}, ${it.City}, ${it.State}, ${it.Zip});
                                """
            }
        }
        sql.close()
    }

    void printDB () {
        def sql = Sql.newInstance(url, user, password, driver)
        sql.eachRow("SELECT * FROM EMPLOYEES;") {row ->
            println row
        }

        sql.close()
    }

    def test_eq() {
        def sql = Sql.newInstance(url, user, password, driver)
        return sql.firstRow("SELECT * FROM EMPLOYEES WHERE FirstName = 'Nam'")
    }

    def sqlInstance () {
        return Sql.newInstance(url, user, password, driver)
    }

    static void main(String[] args) {
        //check for input
        if (args.size() != 1) {
            println "Incorrect format: groovy dbAdder.groovy [filepath]"
            return
        }

        def add = new dbAdder()
        add.addXml(args[0])
        add.printDB()
    }
}
